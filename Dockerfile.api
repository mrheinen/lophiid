# Multi-stage build for Lophiid API Server
FROM golang:1.23-bullseye AS builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    protobuf-compiler \
    protoc-gen-go \
    libmagic-dev \
    libssl-dev \
    pkg-config \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Install compatible gRPC plugin version
RUN go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2.0

# Install specific Bazel version (7.4.1 from .bazelversion)
RUN curl -LO "https://github.com/bazelbuild/bazel/releases/download/7.4.1/bazel-7.4.1-linux-x86_64" \
    && chmod +x bazel-7.4.1-linux-x86_64 \
    && mv bazel-7.4.1-linux-x86_64 /usr/local/bin/bazel

# Set up workspace
WORKDIR /workspace
COPY . .

# Compile protobuf files
RUN ./compile_proto.sh

# Build API server
RUN bazel build //cmd/api:api

# Runtime stage
FROM debian:bullseye-slim

# Install runtime dependencies including curl for health checks
RUN apt-get update && apt-get install -y \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create directories with proper permissions for user namespace mapping
RUN mkdir -p /app/config /app/logs && \
    chmod 755 /app && \
    chmod 777 /app/logs

# Copy binary (correct Bazel output path)
COPY --from=builder /workspace/bazel-bin/cmd/api/api_/api /app/api
RUN chmod +x /app/api

# Note: USER will be set via docker-compose user: directive for namespace mapping
WORKDIR /app

# Expose API port
EXPOSE 9999

# Health check - check if API port is accepting connections
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -s http://localhost:9999/ >/dev/null || exit 1

CMD ["./api"]