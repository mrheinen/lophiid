# Lophiid Backend Infrastructure Environment Variables
# This file contains All configuration options for the backend infrastructure
# Copy this file to .env.backend and adjust values as needed
# 
# The backend infrastructure includes:
# - Backend gRPC server (for agent connections)
# - API server (for UI access)
# - UI (web interface)
# - PostgreSQL database
# - Optional: Yara scanning service
# - Optional: AI triage service
# 
# IMPORTANT: Keep this file secure - it contains sensitive configuration

# ==============================================================================
# PostgreSQL Database Container
# ==============================================================================
POSTGRES_PASSWORD=changeme
POSTGRES_USER=lophiid
POSTGRES_DB=lophiid

# ==============================================================================
# Shared Database Configuration (used by multiple services)
# ==============================================================================
LOPHIID_DATABASE_URL=postgres://lophiid:changeme@postgres:5432/lophiid

# ==============================================================================
# Backend Service Configuration (gRPC server for agent connections)
# ==============================================================================
# Basic Configuration
# Options: debug, info, warn, error
LOPHIID_BACKEND_LOG_LEVEL=debug
LOPHIID_BACKEND_LOG_FILE=/app/logs/backend.log
# Optional: User to run as
LOPHIID_BACKEND_USER=
# Optional: Chroot directory
LOPHIID_BACKEND_CHROOT_DIR=

# Database Settings
LOPHIID_BACKEND_DATABASE_URL=${LOPHIID_DATABASE_URL}
LOPHIID_BACKEND_DATABASE_MAX_OPEN_CONNECTIONS=20
LOPHIID_BACKEND_DATABASE_MIN_OPEN_CONNECTIONS=5

# gRPC Listener Configuration
# Listen on all interfaces for remote agents
LOPHIID_BACKEND_LISTENER_LISTEN_ADDRESS=0.0.0.0:41110
LOPHIID_BACKEND_LISTENER_SSL_CERT=/app/certs/server/server-cert.pem
LOPHIID_BACKEND_LISTENER_SSL_KEY=/app/certs/server/server-key.pem
LOPHIID_BACKEND_LISTENER_SSL_CA_CERT=/app/certs/ca/ca-cert.pem

# Malware Downloader Configuration
LOPHIID_BACKEND_DOWNLOADER_MALWARE_DOWNLOAD_DIR=/app/malware
# Maximum file size to download
LOPHIID_BACKEND_DOWNLOADER_MAX_DOWNLOAD_SIZE_MB=200

# Rate Limiter Configuration
# Time window for rate limiting
LOPHIID_BACKEND_RATELIMITER_RATE_WINDOW=1h
# Bucket duration for rate limiting
LOPHIID_BACKEND_RATELIMITER_BUCKET_DURATION=1m
# Max requests per IP per window
LOPHIID_BACKEND_RATELIMITER_MAX_IP_REQUESTS_PER_WINDOW=1000
# Max requests per IP per bucket
LOPHIID_BACKEND_RATELIMITER_MAX_IP_REQUESTS_PER_BUCKET=50
# Max requests per URI per window
LOPHIID_BACKEND_RATELIMITER_MAX_URI_REQUESTS_PER_WINDOW=2000
# Max requests per URI per bucket
LOPHIID_BACKEND_RATELIMITER_MAX_URI_REQUESTS_PER_BUCKET=100

# Advanced Settings
# How long to cache content
LOPHIID_BACKEND_ADVANCED_CONTENT_CACHE_DURATION=30m
# How long to cache downloads
LOPHIID_BACKEND_ADVANCED_DOWNLOAD_CACHE_DURATION=5m
# Max downloads per IP per 5 minutes
LOPHIID_BACKEND_ADVANCED_MAX_DOWNLOADS_PER_IP=50
# How long to cache ping results
LOPHIID_BACKEND_ADVANCED_PING_CACHE_DURATION=5m
# How often to run stored queries
LOPHIID_BACKEND_ADVANCED_STORED_QUERIES_RUN_INTERVAL=1h
# Size of request processing queue
LOPHIID_BACKEND_ADVANCED_REQUESTS_QUEUE_SIZE=500
# Maintenance tasks interval
LOPHIID_BACKEND_ADVANCED_MAINTENANCE_ROUTINE_INTERVAL=1m
# Session timeout duration
LOPHIID_BACKEND_ADVANCED_SESSION_TRACKING_TIMEOUT=1h

# Analysis Configuration
# How long to cache IP data before DB write
LOPHIID_ANALYSIS_IP_CACHE_DURATION=15m
# Event queue size (monitor with Prometheus)
LOPHIID_ANALYSIS_IP_EVENT_QUEUE_SIZE=5000
# How often to check for scan patterns
LOPHIID_ANALYSIS_SCAN_MONITOR_INTERVAL=5m
# Window for aggregating scan events
LOPHIID_ANALYSIS_SCAN_AGGREGATION_WINDOW=1h

# Scripting Configuration
# Comma-separated list of allowed commands
LOPHIID_SCRIPTING_ALLOWED_COMMANDS=
# Timeout for script commands
LOPHIID_SCRIPTING_COMMAND_TIMEOUT=10s

# Alerting Configuration
# Alert check interval
LOPHIID_ALERTING_INTERVAL=2m
# Optional: Telegram bot API key
LOPHIID_ALERTING_TELEGRAM_API_KEY=
# Optional: Telegram channel ID (0 disables Telegram alerts)
LOPHIID_ALERTING_TELEGRAM_CHANNEL_ID=0

# Prometheus Metrics
# Metrics endpoint address
LOPHIID_PROMETHEUS_LISTEN_ADDRESS=localhost:8998

# Whois/RDAP Manager
# RDAP client timeout
LOPHIID_WHOIS_MANAGER_CLIENT_TIMEOUT=2s
# How long to cache whois results
LOPHIID_WHOIS_MANAGER_CACHE_EXPIRATION_TIME=12h
# Max retry attempts
LOPHIID_WHOIS_MANAGER_MAX_ATTEMPTS=6

# ==============================================================================
# API Server Configuration
# ==============================================================================
# REQUIRED: API authentication key
LOPHIID_API_KEY=change-me

# General Settings
LOPHIID_API_GENERAL_LOG_FILE=/app/logs/api.log
# Options: debug, info, warn, error
LOPHIID_API_GENERAL_LOG_LEVEL=debug
# Listen on all interfaces
LOPHIID_API_GENERAL_LISTEN_IP=0.0.0.0
LOPHIID_API_GENERAL_LISTEN_PORT=9999

# CORS Configuration
# Comma-separated origins or * for all
LOPHIID_API_CORS_ALLOWED_ORIGINS=*

# Database Settings
LOPHIID_API_DATABASE_URL=${LOPHIID_DATABASE_URL}
LOPHIID_API_DATABASE_MAX_OPEN_CONNECTIONS=10

# Scripting Configuration
# Comma-separated list of allowed commands
LOPHIID_API_SCRIPTING_ALLOWED_COMMANDS=
# Timeout for script commands
LOPHIID_API_SCRIPTING_COMMAND_TIMEOUT=1m

# ==============================================================================
# UI Configuration
# ==============================================================================
# This is used by the UI to know where to connect to the API
# Update with your actual API address
LOPHIID_API_BACKEND_ADDRESS=https://localhost:9999

# ==============================================================================
# External Services
# ==============================================================================
# VirusTotal Integration
# Optional: Your VirusTotal API key
LOPHIID_VIRUSTOTAL_API_KEY=
# HTTP request timeout
LOPHIID_VIRUSTOTAL_HTTP_TIMEOUT=2m
# How long to cache VT results
LOPHIID_VIRUSTOTAL_CACHE_EXPIRATION_TIME=96h

# ==============================================================================
# AI/LLM Configuration
# ==============================================================================
# Enable AI response generation
LOPHIID_AI_ENABLE_RESPONDER=false
# OpenAI-compatible API endpoint
LOPHIID_AI_API_LOCATION=http://localhost:8000/v1
# API key for LLM service
LOPHIID_AI_API_KEY=
# Optional: specific model to use
LOPHIID_AI_MODEL=
# Optional: prefix for all prompts
LOPHIID_AI_PROMPT_PREFIX=
# Optional: suffix for all prompts
LOPHIID_AI_PROMPT_SUFFIX=
# How long to cache LLM responses
LOPHIID_AI_CACHE_EXPIRATION_TIME=24h
# Timeout for LLM requests
LOPHIID_AI_LLM_COMPLETION_TIMEOUT=1m
# Max concurrent LLM requests
LOPHIID_AI_LLM_CONCURRENT_REQUESTS=5
# Max input size for LLM
LOPHIID_AI_MAX_INPUT_CHARACTERS=4096

# AI Triage Service (runs as separate container)
# Enable AI triage service
LOPHIID_AI_TRIAGE_ENABLE=false
LOPHIID_AI_TRIAGE_LOG_FILE=/app/logs/triage.log
# Options: debug, info, warn, error
LOPHIID_AI_TRIAGE_LOG_LEVEL=debug
LOPHIID_AI_TRIAGE_METRICS_LISTEN_ADDRESS=localhost:8999
# How long to cache triage results
LOPHIID_AI_TRIAGE_CACHE_EXPIRATION_TIME=8h

# ==============================================================================
# Yara Scanning Service (runs as separate container)
# ==============================================================================
LOPHIID_YARA_LOG_FILE=/app/logs/yara.log
# Options: debug, info, warn, error
LOPHIID_YARA_LOG_LEVEL=debug
# Metrics endpoint
LOPHIID_YARA_METRICS_LISTEN_ADDRESS=localhost:8997
# Optional: command to run before scanning
LOPHIID_YARA_PREPARE_COMMAND=

# ==============================================================================
# SSL Certificate Management (for Let's Encrypt)
# ==============================================================================
# Your domain for SSL certificates
LOPHIID_CERT_DOMAIN=
# Email for Let's Encrypt
LOPHIID_CERT_EMAIL=
# If using Cloudflare DNS validation
CLOUDFLARE_API_TOKEN=