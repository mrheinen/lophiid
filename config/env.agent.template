# Lophiid Agent Environment Variables - COMPREHENSIVE
# This file contains ALL configuration options for honeypot agents
# 
# IMPORTANT: This is a TEMPLATE file. Use ./scripts/setup-agent-certs.sh to generate
# agent-specific configuration with proper certificates and auth tokens.
# 
# Copy the generated agent-<name>/.env.agent file and adjust values as needed
# This file is safe to deploy on remote honeypot hosts (no sensitive backend data)

# ==============================================================================
# General Agent Configuration
# ==============================================================================
# REQUIRED: Public IP of this agent
LOPHIID_GENERAL_PUBLIC_IP=REPLACE_WITH_AGENT_IP
# Options: debug, info, warn, error
LOPHIID_GENERAL_LOG_LEVEL=debug
# Log file location
LOPHIID_GENERAL_LOG_FILE=/app/logs/agent.log
# Optional: User to run as
LOPHIID_GENERAL_USER=
# Optional: Chroot directory
LOPHIID_GENERAL_CHROOT_DIR=

# ==============================================================================
# HTTP Listener Configuration (honeypot web server)
# ==============================================================================
# Listen on all interfaces
LOPHIID_HTTP_LISTENER_IP=0.0.0.0
# Comma-separated list of ports
LOPHIID_HTTP_LISTENER_PORT=80,8000,8001,8002

# ==============================================================================
# HTTPS Listener Configuration (honeypot SSL web server)
# ==============================================================================
# Listen on all interfaces
LOPHIID_HTTPS_LISTENER_IP=0.0.0.0
# Common HTTPS ports
LOPHIID_HTTPS_LISTENER_PORT=443,981,1311,8243,8333,8443,8448,8843
LOPHIID_HTTPS_LISTENER_SSL_CERT=/app/certs/AGENT_NAME-http-cert.pem
LOPHIID_HTTPS_LISTENER_SSL_KEY=/app/certs/AGENT_NAME-http-key.pem

# ==============================================================================
# Backend Client Configuration (connection to central backend)
# ==============================================================================
# REQUIRED: Backend server IP/hostname
LOPHIID_BACKEND_CLIENT_IP=REPLACE_WITH_BACKEND_IP
# Backend gRPC port (default: 41110)
LOPHIID_BACKEND_CLIENT_PORT=41110
# How often to send status updates
LOPHIID_BACKEND_CLIENT_STATUS_INTERVAL=10s
# REQUIRED: Authentication token
LOPHIID_BACKEND_CLIENT_AUTH_TOKEN=REPLACE_WITH_TOKEN

# gRPC SSL Configuration (for secure backend connection)
LOPHIID_BACKEND_CLIENT_GRPC_CA_CERT=/app/certs/ca/ca-cert.pem
LOPHIID_BACKEND_CLIENT_GRPC_SSL_CERT=/app/certs/clients/AGENT_NAME-client-cert.pem
LOPHIID_BACKEND_CLIENT_GRPC_SSL_KEY=/app/certs/clients/AGENT_NAME-client-key.pem

# ==============================================================================
# Downloader Configuration
# ==============================================================================
# Timeout for downloading files
LOPHIID_DOWNLOADER_HTTP_CLIENT_TIMEOUT=10m

# ==============================================================================
# P0f Integration (passive OS fingerprinting)
# ==============================================================================
# Optional: Path to p0f socket
LOPHIID_P0F_SOCKET_LOCATION=
# How often to send p0f data
LOPHIID_P0F_SEND_INTERVAL=1m

# ==============================================================================
# Pinger Configuration (for ICMP ping commands)
# ==============================================================================
# Timeout for ping operations
LOPHIID_PINGER_PING_TIMEOUT=1m

# ==============================================================================
# NOTES
# ==============================================================================
# Port Selection:
# - Choose ports based on what services you want to emulate
# - Common HTTP ports: 80, 8000, 8080, 8081, 8888
# - Common HTTPS ports: 443, 8443, 9443
# - Application-specific ports: 3000, 5000, 7001, 9000
# 
# Security Considerations:
# - The auth token is generated by setup-agent-certs.sh - keep it secret
# - SSL certificates are also generated by the setup script
# - Consider firewall rules to limit access to the honeypot
# 
# Performance Tuning:
# - Adjust STATUS_INTERVAL based on network latency
# - Increase timeouts for slow network connections
# - Monitor agent logs for connection issues